package com.example.macos.database;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "ROAD_INFORMATION".
*/
public class RoadInformationDao extends AbstractDao<RoadInformation, Long> {

    public static final String TABLENAME = "ROAD_INFORMATION";

    /**
     * Properties of entity RoadInformation.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property ID = new Property(0, Long.class, "ID", true, "ID");
        public final static Property MaDuong = new Property(1, String.class, "MaDuong", false, "MA_DUONG");
        public final static Property TenDuong = new Property(2, String.class, "TenDuong", false, "TEN_DUONG");
        public final static Property TuyenSo = new Property(3, String.class, "TuyenSo", false, "TUYEN_SO");
        public final static Property TuyenNhanhSo = new Property(4, String.class, "TuyenNhanhSo", false, "TUYEN_NHANH_SO");
        public final static Property CapDuong = new Property(5, String.class, "CapDuong", false, "CAP_DUONG");
        public final static Property MaDonViQuanLy = new Property(6, Integer.class, "MaDonViQuanLy", false, "MA_DON_VI_QUAN_LY");
        public final static Property TuCotKm = new Property(7, Integer.class, "TuCotKm", false, "TU_COT_KM");
        public final static Property DenCotKm = new Property(8, Integer.class, "DenCotKm", false, "DEN_COT_KM");
        public final static Property ViDo = new Property(9, String.class, "ViDo", false, "VI_DO");
        public final static Property KinhDo = new Property(10, String.class, "KinhDo", false, "KINH_DO");
        public final static Property ChieuDai = new Property(11, Integer.class, "ChieuDai", false, "CHIEU_DAI");
        public final static Property NgayDieuChinhCotKm = new Property(12, String.class, "NgayDieuChinhCotKm", false, "NGAY_DIEU_CHINH_COT_KM");
        public final static Property ThoiDiemCapNhap = new Property(13, String.class, "ThoiDiemCapNhap", false, "THOI_DIEM_CAP_NHAP");
        public final static Property MaTinh = new Property(14, Integer.class, "MaTinh", false, "MA_TINH");
        public final static Property MaThanhPho = new Property(15, Integer.class, "MaThanhPho", false, "MA_THANH_PHO");
        public final static Property LoadLanDuong = new Property(16, String.class, "LoadLanDuong", false, "LOAD_LAN_DUONG");
        public final static Property NamXayDung = new Property(17, Integer.class, "NamXayDung", false, "NAM_XAY_DUNG");
        public final static Property HanhLangDuongBo = new Property(18, Double.class, "HanhLangDuongBo", false, "HANH_LANG_DUONG_BO");
        public final static Property LoaiKetCauDuong = new Property(19, String.class, "LoaiKetCauDuong", false, "LOAI_KET_CAU_DUONG");
        public final static Property SoLanXeCoGioi = new Property(20, Integer.class, "SoLanXeCoGioi", false, "SO_LAN_XE_CO_GIOI");
        public final static Property ChieuRongLanXeCoGioi = new Property(21, Double.class, "ChieuRongLanXeCoGioi", false, "CHIEU_RONG_LAN_XE_CO_GIOI");
        public final static Property LoaiMatDuongLanXeCoGioi = new Property(22, String.class, "LoaiMatDuongLanXeCoGioi", false, "LOAI_MAT_DUONG_LAN_XE_CO_GIOI");
        public final static Property SoLanxeThoSo = new Property(23, Integer.class, "SoLanxeThoSo", false, "SO_LANXE_THO_SO");
        public final static Property LoaiMatDuongLanXeThoSo = new Property(24, String.class, "LoaiMatDuongLanXeThoSo", false, "LOAI_MAT_DUONG_LAN_XE_THO_SO");
        public final static Property ChieuRongLanXeThoSo = new Property(25, Double.class, "ChieuRongLanXeThoSo", false, "CHIEU_RONG_LAN_XE_THO_SO");
        public final static Property ChieuRongDuongXeChay = new Property(26, Double.class, "ChieuRongDuongXeChay", false, "CHIEU_RONG_DUONG_XE_CHAY");
        public final static Property ChieuRongMatDuong = new Property(27, Double.class, "ChieuRongMatDuong", false, "CHIEU_RONG_MAT_DUONG");
        public final static Property LeDuong = new Property(28, String.class, "LeDuong", false, "LE_DUONG");
        public final static Property ChieuRongLeDuong = new Property(29, Double.class, "ChieuRongLeDuong", false, "CHIEU_RONG_LE_DUONG");
        public final static Property ViaHe = new Property(30, String.class, "ViaHe", false, "VIA_HE");
        public final static Property ChieuRongViaHe = new Property(31, Double.class, "ChieuRongViaHe", false, "CHIEU_RONG_VIA_HE");
        public final static Property LoaiViaHe = new Property(32, String.class, "LoaiViaHe", false, "LOAI_VIA_HE");
        public final static Property ChieuRongThoatNuoc = new Property(33, Double.class, "ChieuRongThoatNuoc", false, "CHIEU_RONG_THOAT_NUOC");
        public final static Property TocDoThietKe = new Property(34, Double.class, "TocDoThietKe", false, "TOC_DO_THIET_KE");
        public final static Property LoaiDiaHinh = new Property(35, String.class, "LoaiDiaHinh", false, "LOAI_DIA_HINH");
        public final static Property LoaiNenDuong = new Property(36, String.class, "LoaiNenDuong", false, "LOAI_NEN_DUONG");
    };


    public RoadInformationDao(DaoConfig config) {
        super(config);
    }
    
    public RoadInformationDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"ROAD_INFORMATION\" (" + //
                "\"ID\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: ID
                "\"MA_DUONG\" TEXT," + // 1: MaDuong
                "\"TEN_DUONG\" TEXT," + // 2: TenDuong
                "\"TUYEN_SO\" TEXT," + // 3: TuyenSo
                "\"TUYEN_NHANH_SO\" TEXT," + // 4: TuyenNhanhSo
                "\"CAP_DUONG\" TEXT," + // 5: CapDuong
                "\"MA_DON_VI_QUAN_LY\" INTEGER," + // 6: MaDonViQuanLy
                "\"TU_COT_KM\" INTEGER," + // 7: TuCotKm
                "\"DEN_COT_KM\" INTEGER," + // 8: DenCotKm
                "\"VI_DO\" TEXT," + // 9: ViDo
                "\"KINH_DO\" TEXT," + // 10: KinhDo
                "\"CHIEU_DAI\" INTEGER," + // 11: ChieuDai
                "\"NGAY_DIEU_CHINH_COT_KM\" TEXT," + // 12: NgayDieuChinhCotKm
                "\"THOI_DIEM_CAP_NHAP\" TEXT," + // 13: ThoiDiemCapNhap
                "\"MA_TINH\" INTEGER," + // 14: MaTinh
                "\"MA_THANH_PHO\" INTEGER," + // 15: MaThanhPho
                "\"LOAD_LAN_DUONG\" TEXT," + // 16: LoadLanDuong
                "\"NAM_XAY_DUNG\" INTEGER," + // 17: NamXayDung
                "\"HANH_LANG_DUONG_BO\" REAL," + // 18: HanhLangDuongBo
                "\"LOAI_KET_CAU_DUONG\" TEXT," + // 19: LoaiKetCauDuong
                "\"SO_LAN_XE_CO_GIOI\" INTEGER," + // 20: SoLanXeCoGioi
                "\"CHIEU_RONG_LAN_XE_CO_GIOI\" REAL," + // 21: ChieuRongLanXeCoGioi
                "\"LOAI_MAT_DUONG_LAN_XE_CO_GIOI\" TEXT," + // 22: LoaiMatDuongLanXeCoGioi
                "\"SO_LANXE_THO_SO\" INTEGER," + // 23: SoLanxeThoSo
                "\"LOAI_MAT_DUONG_LAN_XE_THO_SO\" TEXT," + // 24: LoaiMatDuongLanXeThoSo
                "\"CHIEU_RONG_LAN_XE_THO_SO\" REAL," + // 25: ChieuRongLanXeThoSo
                "\"CHIEU_RONG_DUONG_XE_CHAY\" REAL," + // 26: ChieuRongDuongXeChay
                "\"CHIEU_RONG_MAT_DUONG\" REAL," + // 27: ChieuRongMatDuong
                "\"LE_DUONG\" TEXT," + // 28: LeDuong
                "\"CHIEU_RONG_LE_DUONG\" REAL," + // 29: ChieuRongLeDuong
                "\"VIA_HE\" TEXT," + // 30: ViaHe
                "\"CHIEU_RONG_VIA_HE\" REAL," + // 31: ChieuRongViaHe
                "\"LOAI_VIA_HE\" TEXT," + // 32: LoaiViaHe
                "\"CHIEU_RONG_THOAT_NUOC\" REAL," + // 33: ChieuRongThoatNuoc
                "\"TOC_DO_THIET_KE\" REAL," + // 34: TocDoThietKe
                "\"LOAI_DIA_HINH\" TEXT," + // 35: LoaiDiaHinh
                "\"LOAI_NEN_DUONG\" TEXT);"); // 36: LoaiNenDuong
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"ROAD_INFORMATION\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, RoadInformation entity) {
        stmt.clearBindings();
 
        Long ID = entity.getID();
        if (ID != null) {
            stmt.bindLong(1, ID);
        }
 
        String MaDuong = entity.getMaDuong();
        if (MaDuong != null) {
            stmt.bindString(2, MaDuong);
        }
 
        String TenDuong = entity.getTenDuong();
        if (TenDuong != null) {
            stmt.bindString(3, TenDuong);
        }
 
        String TuyenSo = entity.getTuyenSo();
        if (TuyenSo != null) {
            stmt.bindString(4, TuyenSo);
        }
 
        String TuyenNhanhSo = entity.getTuyenNhanhSo();
        if (TuyenNhanhSo != null) {
            stmt.bindString(5, TuyenNhanhSo);
        }
 
        String CapDuong = entity.getCapDuong();
        if (CapDuong != null) {
            stmt.bindString(6, CapDuong);
        }
 
        Integer MaDonViQuanLy = entity.getMaDonViQuanLy();
        if (MaDonViQuanLy != null) {
            stmt.bindLong(7, MaDonViQuanLy);
        }
 
        Integer TuCotKm = entity.getTuCotKm();
        if (TuCotKm != null) {
            stmt.bindLong(8, TuCotKm);
        }
 
        Integer DenCotKm = entity.getDenCotKm();
        if (DenCotKm != null) {
            stmt.bindLong(9, DenCotKm);
        }
 
        String ViDo = entity.getViDo();
        if (ViDo != null) {
            stmt.bindString(10, ViDo);
        }
 
        String KinhDo = entity.getKinhDo();
        if (KinhDo != null) {
            stmt.bindString(11, KinhDo);
        }
 
        Integer ChieuDai = entity.getChieuDai();
        if (ChieuDai != null) {
            stmt.bindLong(12, ChieuDai);
        }
 
        String NgayDieuChinhCotKm = entity.getNgayDieuChinhCotKm();
        if (NgayDieuChinhCotKm != null) {
            stmt.bindString(13, NgayDieuChinhCotKm);
        }
 
        String ThoiDiemCapNhap = entity.getThoiDiemCapNhap();
        if (ThoiDiemCapNhap != null) {
            stmt.bindString(14, ThoiDiemCapNhap);
        }
 
        Integer MaTinh = entity.getMaTinh();
        if (MaTinh != null) {
            stmt.bindLong(15, MaTinh);
        }
 
        Integer MaThanhPho = entity.getMaThanhPho();
        if (MaThanhPho != null) {
            stmt.bindLong(16, MaThanhPho);
        }
 
        String LoadLanDuong = entity.getLoadLanDuong();
        if (LoadLanDuong != null) {
            stmt.bindString(17, LoadLanDuong);
        }
 
        Integer NamXayDung = entity.getNamXayDung();
        if (NamXayDung != null) {
            stmt.bindLong(18, NamXayDung);
        }
 
        Double HanhLangDuongBo = entity.getHanhLangDuongBo();
        if (HanhLangDuongBo != null) {
            stmt.bindDouble(19, HanhLangDuongBo);
        }
 
        String LoaiKetCauDuong = entity.getLoaiKetCauDuong();
        if (LoaiKetCauDuong != null) {
            stmt.bindString(20, LoaiKetCauDuong);
        }
 
        Integer SoLanXeCoGioi = entity.getSoLanXeCoGioi();
        if (SoLanXeCoGioi != null) {
            stmt.bindLong(21, SoLanXeCoGioi);
        }
 
        Double ChieuRongLanXeCoGioi = entity.getChieuRongLanXeCoGioi();
        if (ChieuRongLanXeCoGioi != null) {
            stmt.bindDouble(22, ChieuRongLanXeCoGioi);
        }
 
        String LoaiMatDuongLanXeCoGioi = entity.getLoaiMatDuongLanXeCoGioi();
        if (LoaiMatDuongLanXeCoGioi != null) {
            stmt.bindString(23, LoaiMatDuongLanXeCoGioi);
        }
 
        Integer SoLanxeThoSo = entity.getSoLanxeThoSo();
        if (SoLanxeThoSo != null) {
            stmt.bindLong(24, SoLanxeThoSo);
        }
 
        String LoaiMatDuongLanXeThoSo = entity.getLoaiMatDuongLanXeThoSo();
        if (LoaiMatDuongLanXeThoSo != null) {
            stmt.bindString(25, LoaiMatDuongLanXeThoSo);
        }
 
        Double ChieuRongLanXeThoSo = entity.getChieuRongLanXeThoSo();
        if (ChieuRongLanXeThoSo != null) {
            stmt.bindDouble(26, ChieuRongLanXeThoSo);
        }
 
        Double ChieuRongDuongXeChay = entity.getChieuRongDuongXeChay();
        if (ChieuRongDuongXeChay != null) {
            stmt.bindDouble(27, ChieuRongDuongXeChay);
        }
 
        Double ChieuRongMatDuong = entity.getChieuRongMatDuong();
        if (ChieuRongMatDuong != null) {
            stmt.bindDouble(28, ChieuRongMatDuong);
        }
 
        String LeDuong = entity.getLeDuong();
        if (LeDuong != null) {
            stmt.bindString(29, LeDuong);
        }
 
        Double ChieuRongLeDuong = entity.getChieuRongLeDuong();
        if (ChieuRongLeDuong != null) {
            stmt.bindDouble(30, ChieuRongLeDuong);
        }
 
        String ViaHe = entity.getViaHe();
        if (ViaHe != null) {
            stmt.bindString(31, ViaHe);
        }
 
        Double ChieuRongViaHe = entity.getChieuRongViaHe();
        if (ChieuRongViaHe != null) {
            stmt.bindDouble(32, ChieuRongViaHe);
        }
 
        String LoaiViaHe = entity.getLoaiViaHe();
        if (LoaiViaHe != null) {
            stmt.bindString(33, LoaiViaHe);
        }
 
        Double ChieuRongThoatNuoc = entity.getChieuRongThoatNuoc();
        if (ChieuRongThoatNuoc != null) {
            stmt.bindDouble(34, ChieuRongThoatNuoc);
        }
 
        Double TocDoThietKe = entity.getTocDoThietKe();
        if (TocDoThietKe != null) {
            stmt.bindDouble(35, TocDoThietKe);
        }
 
        String LoaiDiaHinh = entity.getLoaiDiaHinh();
        if (LoaiDiaHinh != null) {
            stmt.bindString(36, LoaiDiaHinh);
        }
 
        String LoaiNenDuong = entity.getLoaiNenDuong();
        if (LoaiNenDuong != null) {
            stmt.bindString(37, LoaiNenDuong);
        }
    }

    /** @inheritdoc */
    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public RoadInformation readEntity(Cursor cursor, int offset) {
        RoadInformation entity = new RoadInformation( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // ID
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // MaDuong
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // TenDuong
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // TuyenSo
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // TuyenNhanhSo
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // CapDuong
            cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6), // MaDonViQuanLy
            cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7), // TuCotKm
            cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8), // DenCotKm
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // ViDo
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // KinhDo
            cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // ChieuDai
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // NgayDieuChinhCotKm
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // ThoiDiemCapNhap
            cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14), // MaTinh
            cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15), // MaThanhPho
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // LoadLanDuong
            cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17), // NamXayDung
            cursor.isNull(offset + 18) ? null : cursor.getDouble(offset + 18), // HanhLangDuongBo
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // LoaiKetCauDuong
            cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20), // SoLanXeCoGioi
            cursor.isNull(offset + 21) ? null : cursor.getDouble(offset + 21), // ChieuRongLanXeCoGioi
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // LoaiMatDuongLanXeCoGioi
            cursor.isNull(offset + 23) ? null : cursor.getInt(offset + 23), // SoLanxeThoSo
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // LoaiMatDuongLanXeThoSo
            cursor.isNull(offset + 25) ? null : cursor.getDouble(offset + 25), // ChieuRongLanXeThoSo
            cursor.isNull(offset + 26) ? null : cursor.getDouble(offset + 26), // ChieuRongDuongXeChay
            cursor.isNull(offset + 27) ? null : cursor.getDouble(offset + 27), // ChieuRongMatDuong
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // LeDuong
            cursor.isNull(offset + 29) ? null : cursor.getDouble(offset + 29), // ChieuRongLeDuong
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // ViaHe
            cursor.isNull(offset + 31) ? null : cursor.getDouble(offset + 31), // ChieuRongViaHe
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // LoaiViaHe
            cursor.isNull(offset + 33) ? null : cursor.getDouble(offset + 33), // ChieuRongThoatNuoc
            cursor.isNull(offset + 34) ? null : cursor.getDouble(offset + 34), // TocDoThietKe
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // LoaiDiaHinh
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36) // LoaiNenDuong
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, RoadInformation entity, int offset) {
        entity.setID(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setMaDuong(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setTenDuong(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setTuyenSo(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setTuyenNhanhSo(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setCapDuong(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setMaDonViQuanLy(cursor.isNull(offset + 6) ? null : cursor.getInt(offset + 6));
        entity.setTuCotKm(cursor.isNull(offset + 7) ? null : cursor.getInt(offset + 7));
        entity.setDenCotKm(cursor.isNull(offset + 8) ? null : cursor.getInt(offset + 8));
        entity.setViDo(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setKinhDo(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setChieuDai(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setNgayDieuChinhCotKm(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setThoiDiemCapNhap(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setMaTinh(cursor.isNull(offset + 14) ? null : cursor.getInt(offset + 14));
        entity.setMaThanhPho(cursor.isNull(offset + 15) ? null : cursor.getInt(offset + 15));
        entity.setLoadLanDuong(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setNamXayDung(cursor.isNull(offset + 17) ? null : cursor.getInt(offset + 17));
        entity.setHanhLangDuongBo(cursor.isNull(offset + 18) ? null : cursor.getDouble(offset + 18));
        entity.setLoaiKetCauDuong(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setSoLanXeCoGioi(cursor.isNull(offset + 20) ? null : cursor.getInt(offset + 20));
        entity.setChieuRongLanXeCoGioi(cursor.isNull(offset + 21) ? null : cursor.getDouble(offset + 21));
        entity.setLoaiMatDuongLanXeCoGioi(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setSoLanxeThoSo(cursor.isNull(offset + 23) ? null : cursor.getInt(offset + 23));
        entity.setLoaiMatDuongLanXeThoSo(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setChieuRongLanXeThoSo(cursor.isNull(offset + 25) ? null : cursor.getDouble(offset + 25));
        entity.setChieuRongDuongXeChay(cursor.isNull(offset + 26) ? null : cursor.getDouble(offset + 26));
        entity.setChieuRongMatDuong(cursor.isNull(offset + 27) ? null : cursor.getDouble(offset + 27));
        entity.setLeDuong(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setChieuRongLeDuong(cursor.isNull(offset + 29) ? null : cursor.getDouble(offset + 29));
        entity.setViaHe(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setChieuRongViaHe(cursor.isNull(offset + 31) ? null : cursor.getDouble(offset + 31));
        entity.setLoaiViaHe(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setChieuRongThoatNuoc(cursor.isNull(offset + 33) ? null : cursor.getDouble(offset + 33));
        entity.setTocDoThietKe(cursor.isNull(offset + 34) ? null : cursor.getDouble(offset + 34));
        entity.setLoaiDiaHinh(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setLoaiNenDuong(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
     }
    
    /** @inheritdoc */
    @Override
    protected Long updateKeyAfterInsert(RoadInformation entity, long rowId) {
        entity.setID(rowId);
        return rowId;
    }
    
    /** @inheritdoc */
    @Override
    public Long getKey(RoadInformation entity) {
        if(entity != null) {
            return entity.getID();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
